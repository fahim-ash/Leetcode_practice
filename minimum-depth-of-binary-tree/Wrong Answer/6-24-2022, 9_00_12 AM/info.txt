{"id":729777913,"lang":"python3","time":"3 months, 3 weeks","timestamp":1656039612,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/729777913/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def minDepth(self, root: Optional[TreeNode]) -> int:\n        if root==None:\n            return 0\n        left=self.minDepth(root.left)\n        right=self.minDepth(root.right)\n        if left==0 and right==0:\n            return max(left,right)+1   \n        return min(left,right)+1  \n        \n        ","compare_result":"1011001100010111101001000101000110100001111111110011","title_slug":"minimum-depth-of-binary-tree"}