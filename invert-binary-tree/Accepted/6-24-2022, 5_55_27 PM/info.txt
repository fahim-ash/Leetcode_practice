{"id":730082778,"lang":"python3","time":"3 months, 3 weeks","timestamp":1656071727,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/730082778/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"13.7 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:\n        if not root:\n            return None\n        right=self.invertTree(root.right)\n        left=self.invertTree(root.left)\n        root.left=right\n        root.right=left\n        return root\n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}