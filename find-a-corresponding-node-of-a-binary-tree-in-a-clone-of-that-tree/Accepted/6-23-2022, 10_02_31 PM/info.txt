{"id":729420381,"lang":"python3","time":"3 months, 3 weeks","timestamp":1656000151,"status_display":"Accepted","runtime":"663 ms","url":"/submissions/detail/729420381/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"24.1 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def getTargetCopy(self, original: TreeNode, cloned: TreeNode, target: TreeNode) -> TreeNode:\n        def dfs(original,cloned,target):\n            if not original or not cloned:\n                return\n            \n            if original==target:\n                return cloned\n            \n            return dfs(original.right,cloned.right,target) or dfs(original.left,cloned.left,target)\n        \n        return dfs(original,cloned,target)\n        ","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}