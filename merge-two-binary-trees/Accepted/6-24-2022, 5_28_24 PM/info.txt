{"id":730069264,"lang":"python3","time":"3 months, 3 weeks","timestamp":1656070104,"status_display":"Accepted","runtime":"102 ms","url":"/submissions/detail/730069264/","is_pending":"Not Pending","title":"Merge Two Binary Trees","memory":"15.6 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def mergeTrees(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> Optional[TreeNode]:\n        t1=root1\n        t2=root2\n        if not t1 and not t2:\n            return None\n        v1=t1.val if t1 else 0\n        v2=t2.val if t2 else 0\n        root= TreeNode(v1+v2)\n        \n        root.left= self.mergeTrees(t1.left if t1 else None,t2.left if t2 else None)\n        root.right= self.mergeTrees(t1.right if t1 else None,t2.right if t2 else None)\n        \n        return root\n        \n        \n        ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-binary-trees"}