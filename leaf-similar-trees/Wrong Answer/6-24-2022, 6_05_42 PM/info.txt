{"id":730087825,"lang":"python3","time":"3 months, 3 weeks","timestamp":1656072342,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/730087825/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:\n        def dfs(node):\n            if node:\n                if not node.left and not node.right:\n                    return node.val\n                yield from dfs(node.left)\n                yield from dfs(node.right)\n                \n        return list(dfs(root1))==list(dfs(root2))\n                \n        \n","compare_result":"1010110010101000101010101010101010101010","title_slug":"leaf-similar-trees"}